CCS PCH C Compiler, Version 5.007, 61971               01-ago-24 20:02

               Filename:   C:\Users\Thiago de sena\Documents\CCS C Projects\Display 7 seg\relogio_com_display_7seg.lst

               ROM used:   748 bytes (2%)
                           Largest free fragment is 32016
               RAM used:   55 (3%) at main() level
                           57 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0274
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include<18F4550.h>  
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #use delay (clock=1000000)         
.................... #fuses HS, NOWDT, PUT, BROWNOUT, NOLVP, CPUDIV1  
.................... #define led0 pin_b1 
.................... int16 conta=0; 
.................... boolean estado_anterior = false; 
.................... int digito[10] = 
....................                {0b00111111,    //Dígito 0 
....................                 0b00000110,    //Dígito 1 
....................                 0b01011011,    //Dígito 2 
....................                 0b01001111,    //Dígito 3 
....................                 0b01100110,    //Dígito 4 
....................                 0b01101101,    //Dígito 5 
....................                 0b01111101,    //Dígito 6 
....................                 0b00000111,    //Dígito 7 
....................                 0b01111111,    //Dígito 8 
....................                 0b01101111     //Dígito 9 
....................                }; 
.................... #int_timer0               
.................... void trata_t0()            
.................... { 
....................  
.................... static unsigned int32 tempo=0,num=0,num1=5,num2=9,num3=5; 
....................  
....................  
.................... if(input(pin_b0)==0){ 
0096:  BSF    F93.0
0098:  BTFSC  F81.0
009A:  BRA    00BC
....................    num=0; 
009C:  CLRF   2A
009E:  CLRF   29
00A0:  CLRF   28
00A2:  CLRF   27
....................    num1=0; 
00A4:  CLRF   2E
00A6:  CLRF   2D
00A8:  CLRF   2C
00AA:  CLRF   2B
....................    num2=0; 
00AC:  CLRF   32
00AE:  CLRF   31
00B0:  CLRF   30
00B2:  CLRF   2F
....................    num3=0; 
00B4:  CLRF   36
00B6:  CLRF   35
00B8:  CLRF   34
00BA:  CLRF   33
.................... } 
.................... if(input(pin_b1)==0){ 
00BC:  BSF    F93.1
00BE:  BTFSC  F81.1
00C0:  BRA    00C4
....................    num = num; 
....................    num1=num1; 
....................    num2=num2; 
....................    num3=num3; 
....................    estado_anterior= !estado_anterior; 
00C2:  BTG    18.0
.................... } 
....................    //SET_TIMER0(3036+get_timer0()); //set_timer 
....................    SET_TIMER0(131+get_timer0()); //set_timer 
00C4:  MOVF   FD6,W
00C6:  MOVFF  FD7,03
00CA:  ADDLW  83
00CC:  MOVWF  37
00CE:  MOVLW  00
00D0:  ADDWFC FD7,W
00D2:  MOVWF  FD7
00D4:  MOVFF  37,FD6
.................... conta++; 
00D8:  INCF   16,F
00DA:  BTFSC  FD8.2
00DC:  INCF   17,F
.................... if (conta>4) conta = 1; 
00DE:  MOVF   17,F
00E0:  BNZ   00E8
00E2:  MOVF   16,W
00E4:  SUBLW  04
00E6:  BC    00EE
00E8:  CLRF   17
00EA:  MOVLW  01
00EC:  MOVWF  16
.................... switch(conta) 
00EE:  MOVFF  16,00
00F2:  MOVF   17,W
00F4:  MOVWF  03
00F6:  BNZ   00FE
00F8:  MOVLW  01
00FA:  SUBWF  00,W
00FC:  BZ    011E
00FE:  MOVF   03,W
0100:  BNZ   0108
0102:  MOVLW  02
0104:  SUBWF  00,W
0106:  BZ    013C
0108:  MOVF   03,W
010A:  BNZ   0112
010C:  MOVLW  03
010E:  SUBWF  00,W
0110:  BZ    015A
0112:  MOVF   03,W
0114:  BNZ   011C
0116:  MOVLW  04
0118:  SUBWF  00,W
011A:  BZ    0178
011C:  BRA    0194
....................           { 
....................       case 1: OUTPUT_D(digito[num3]); 
011E:  MOVLW  19
0120:  ADDWF  33,W
0122:  MOVWF  FE9
0124:  MOVLW  00
0126:  ADDWFC 34,W
0128:  MOVWF  FEA
012A:  MOVFF  FEF,37
012E:  CLRF   F95
0130:  MOVFF  37,F8C
....................                        OUTPUT_A(0b11111011); 
0134:  CLRF   F92
0136:  MOVLW  FB
0138:  MOVWF  F89
....................                        break;  
013A:  BRA    0194
....................       case 2: OUTPUT_D(digito[num2]); 
013C:  MOVLW  19
013E:  ADDWF  2F,W
0140:  MOVWF  FE9
0142:  MOVLW  00
0144:  ADDWFC 30,W
0146:  MOVWF  FEA
0148:  MOVFF  FEF,37
014C:  CLRF   F95
014E:  MOVFF  37,F8C
....................                        OUTPUT_A(0b11110111); 
0152:  CLRF   F92
0154:  MOVLW  F7
0156:  MOVWF  F89
....................                        break;  
0158:  BRA    0194
....................       case 3: OUTPUT_D(digito[num1]); 
015A:  MOVLW  19
015C:  ADDWF  2B,W
015E:  MOVWF  FE9
0160:  MOVLW  00
0162:  ADDWFC 2C,W
0164:  MOVWF  FEA
0166:  MOVFF  FEF,37
016A:  CLRF   F95
016C:  MOVFF  37,F8C
....................                        OUTPUT_A(0b11101111); 
0170:  CLRF   F92
0172:  MOVLW  EF
0174:  MOVWF  F89
....................                        break;  
0176:  BRA    0194
....................       case 4: OUTPUT_D(digito[num]); 
0178:  MOVLW  19
017A:  ADDWF  27,W
017C:  MOVWF  FE9
017E:  MOVLW  00
0180:  ADDWFC 28,W
0182:  MOVWF  FEA
0184:  MOVFF  FEF,37
0188:  CLRF   F95
018A:  MOVFF  37,F8C
....................                        OUTPUT_A(0b11011111); 
018E:  CLRF   F92
0190:  MOVLW  DF
0192:  MOVWF  F89
....................                        break;  
....................           } 
....................            
....................  
.................... if(!estado_anterior){ 
0194:  BTFSC  18.0
0196:  BRA    026E
....................  
.................... tempo++; 
0198:  MOVLW  01
019A:  ADDWF  23,F
019C:  BTFSC  FD8.0
019E:  INCF   24,F
01A0:  BTFSC  FD8.2
01A2:  INCF   25,F
01A4:  BTFSC  FD8.2
01A6:  INCF   26,F
.................... if (tempo==32) 
01A8:  MOVF   23,W
01AA:  SUBLW  20
01AC:  BTFSS  FD8.2
01AE:  BRA    026E
01B0:  MOVF   24,F
01B2:  BTFSS  FD8.2
01B4:  BRA    026E
01B6:  MOVF   25,F
01B8:  BNZ   026E
01BA:  MOVF   26,F
01BC:  BNZ   026E
.................... { 
.................... tempo=0; 
01BE:  CLRF   26
01C0:  CLRF   25
01C2:  CLRF   24
01C4:  CLRF   23
.................... num++; 
01C6:  MOVLW  01
01C8:  ADDWF  27,F
01CA:  BTFSC  FD8.0
01CC:  INCF   28,F
01CE:  BTFSC  FD8.2
01D0:  INCF   29,F
01D2:  BTFSC  FD8.2
01D4:  INCF   2A,F
.................... if (num>9){ 
01D6:  MOVF   2A,F
01D8:  BNZ   01E8
01DA:  MOVF   29,F
01DC:  BNZ   01E8
01DE:  MOVF   28,F
01E0:  BNZ   01E8
01E2:  MOVF   27,W
01E4:  SUBLW  09
01E6:  BC    0200
.................... num=0; 
01E8:  CLRF   2A
01EA:  CLRF   29
01EC:  CLRF   28
01EE:  CLRF   27
.................... num1++; 
01F0:  MOVLW  01
01F2:  ADDWF  2B,F
01F4:  BTFSC  FD8.0
01F6:  INCF   2C,F
01F8:  BTFSC  FD8.2
01FA:  INCF   2D,F
01FC:  BTFSC  FD8.2
01FE:  INCF   2E,F
.................... } 
.................... if(num1>5){ 
0200:  MOVF   2E,F
0202:  BNZ   0212
0204:  MOVF   2D,F
0206:  BNZ   0212
0208:  MOVF   2C,F
020A:  BNZ   0212
020C:  MOVF   2B,W
020E:  SUBLW  05
0210:  BC    022A
.................... num1=0; 
0212:  CLRF   2E
0214:  CLRF   2D
0216:  CLRF   2C
0218:  CLRF   2B
.................... num2++; 
021A:  MOVLW  01
021C:  ADDWF  2F,F
021E:  BTFSC  FD8.0
0220:  INCF   30,F
0222:  BTFSC  FD8.2
0224:  INCF   31,F
0226:  BTFSC  FD8.2
0228:  INCF   32,F
.................... } 
.................... if(num2>9){ 
022A:  MOVF   32,F
022C:  BNZ   023C
022E:  MOVF   31,F
0230:  BNZ   023C
0232:  MOVF   30,F
0234:  BNZ   023C
0236:  MOVF   2F,W
0238:  SUBLW  09
023A:  BC    0254
.................... num2=0; 
023C:  CLRF   32
023E:  CLRF   31
0240:  CLRF   30
0242:  CLRF   2F
.................... num3++; 
0244:  MOVLW  01
0246:  ADDWF  33,F
0248:  BTFSC  FD8.0
024A:  INCF   34,F
024C:  BTFSC  FD8.2
024E:  INCF   35,F
0250:  BTFSC  FD8.2
0252:  INCF   36,F
.................... } 
.................... if(num3>5)num3=0; 
0254:  MOVF   36,F
0256:  BNZ   0266
0258:  MOVF   35,F
025A:  BNZ   0266
025C:  MOVF   34,F
025E:  BNZ   0266
0260:  MOVF   33,W
0262:  SUBLW  05
0264:  BC    026E
0266:  CLRF   36
0268:  CLRF   35
026A:  CLRF   34
026C:  CLRF   33
.................... } 
....................  
.................... } 
026E:  BCF    FF2.2
0270:  GOTO   0054
.................... }           
....................            
....................            
....................   
.................... void main() 
0274:  CLRF   FF8
0276:  BCF    FD0.7
0278:  BSF    07.7
027A:  CLRF   17
027C:  CLRF   16
027E:  BCF    18.0
0280:  CLRF   26
0282:  CLRF   25
0284:  CLRF   24
0286:  CLRF   23
0288:  CLRF   2A
028A:  CLRF   29
028C:  CLRF   28
028E:  CLRF   27
0290:  CLRF   2E
0292:  CLRF   2D
0294:  CLRF   2C
0296:  MOVLW  05
0298:  MOVWF  2B
029A:  CLRF   32
029C:  CLRF   31
029E:  CLRF   30
02A0:  MOVLW  09
02A2:  MOVWF  2F
02A4:  CLRF   36
02A6:  CLRF   35
02A8:  CLRF   34
02AA:  MOVLW  05
02AC:  MOVWF  33
02AE:  MOVF   FC1,W
02B0:  ANDLW  C0
02B2:  IORLW  0F
02B4:  MOVWF  FC1
02B6:  MOVLW  07
02B8:  MOVWF  FB4
02BA:  MOVLW  3F
02BC:  MOVWF  19
02BE:  MOVLW  06
02C0:  MOVWF  1A
02C2:  MOVLW  5B
02C4:  MOVWF  1B
02C6:  MOVLW  4F
02C8:  MOVWF  1C
02CA:  MOVLW  66
02CC:  MOVWF  1D
02CE:  MOVLW  6D
02D0:  MOVWF  1E
02D2:  MOVLW  7D
02D4:  MOVWF  1F
02D6:  MOVLW  07
02D8:  MOVWF  20
02DA:  MOVLW  7F
02DC:  MOVWF  21
02DE:  MOVLW  6F
02E0:  MOVWF  22
.................... { 
.................... port_b_pullups(TRUE); 
02E2:  BCF    FF1.7
.................... ENABLE_INTERRUPTS(GLOBAL|INT_TIMER0);   
02E4:  MOVLW  E0
02E6:  IORWF  FF2,F
.................... //setup_timer_0 (RTCC_DIV_2|RTCC_INTERNAL);  
.................... setup_timer_0 (RTCC_DIV_64|RTCC_INTERNAL | RTCC_8_BIT );//8 bits 
02E8:  MOVLW  C5
02EA:  MOVWF  FD5
.................... while(true) 
.................... {} 
02EC:  BRA    02EC
.................... } 
02EE:  SLEEP 

Configuration Fuses:
   Word  1: CC27   PLL12 CPUDIV1 USBDIV HS FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
